- name: Gather hcloud volume infos
  hcloud_volume_info:
    api_token: "{{ hetzner.api_key }}"
  register: output
  tags:
    - create

- name: "Getting the number of volumes existing in Hetzner"
  set_fact:
    vol_num: "{{ output.hcloud_volume_info|length + 1 }}"
  tags:
    - create

- name: Create a volume
  hcloud_volume:
    name: "vol-{{ vol_num }}"
    server: "{{ target }}"
    size: "{{ hetzner.resize }}"
    api_token: "{{ hetzner.api_key }}"
  register: volume
  tags:
    - create

- name: Create volume folder
  delegate_to: "{{ target }}"
  become: yes
  file:
    path: /tmp/vol-{{ vol_num }}
    owner: admin
    group: admins
    mode: "0644"
    state: directory
  tags:
    - create

- name: Get filesystem_paths
  delegate_to: "{{ target }}"
  become: yes
  shell:
    cmd: lsblk | awk 'NR == 1 || $4 ~ "{{ hetzner.resize }}G"' | awk '{print $1}' | awk 'END{print}'
  register: file_path
  tags:
    - create

- name: Create a ext4 filesystem on the volume
  delegate_to: "{{ target }}"
  become: yes
  filesystem:
    fstype: ext4
    dev: "/dev/{{ file_path.stdout }}"
  tags:
    - create

- name: Mount and bind a volume
  delegate_to: "{{ target }}"
  become: yes
  mount:
    path: /media/vol-{{ vol_num }}
    src: "/dev/{{ file_path.stdout }}"
    opts: defaults,nofail
    fstype: ext4
    state: mounted
  tags:
    - create
